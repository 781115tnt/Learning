#Add sudo for debian
apt install usermod
/sbin/usermod -aG sudo thanhtran

#Install gnome core
apt install gdm3 gnome-core
#delete the content of
/etc/network/interfaces

#Install Xfce minimum
sudo apt install xfce4 lightdm network-manager network-manager-gnome firefox-esr geany #xfce4-goodies
#Allow autologin
sudo leafpad /etc/lightdm/lightdm.conf
	autologin-user=YourDesiredAutoLoginUserName
#XFCE/Settings/Settings Manager/Power Manager -> uncheck Lock screen when going for suspend/hibernate.

############### WORKING WITH EFI ###############
#Show EFI boot info:
efibootmgr -v
#Changing order:
sudo efibootmgr -o order1,order2....


############### WORKING WITH APT ###############

#Update apt index
sudo apt update

#Install new package
sudo apt install pkg_name1 pkg_name2 pkg_name3…
#Install new package -> auto yes
sudo apt install -y pkg_name1 pkg_name2 pkg_name3…
#Reinstall package
sudo apt install —reinstall pkg_name1
#Fix broken
sudo apt install --fix-broken


#Remove but keep configuration files
sudo apt remove pkg_name
#Remove completely pkg and configuration files
sudo apt purge pkg_name #Cleaning up installed packages that are no longer needed
sudo apt autoremove pkg_name
#Remove  all downloaded pkg files from local cache
sudo apt clean
#Remove pkg, its configuration files and any unused dependencies 
sudo apt purge —autoremove pkg_name

#Search app
apt  search app_keyword
apt-cache search app_keyword
#Show package information 
apt show pkg_name
#List installed package
apt list --installed
#List all installed with only package name
apt list --installed | grep -o '.*[/]' | sed 's/[/]$//'

#Upgrade installed pkgs to latest versions, but won’t remove pkgs or install new dependencies	
sudo apt upgrade
#Upgrade pkgs and handles changing dependencies, removing or installing pkgs if necessary 
sudo apt dist-upgrade
#Upgrade only specific pkg
sudo apt install —only-upgrade pkg_name
#Upgrade  — Recommended upgrade workflow
	sudo apt update
	apt list —upgradable
	sudo apt upgrade -y
	sudo apt autoremove && sudo apt clean
#Upgrade - SYSTEM UPGRADE
	sudo apt update && sudo apt full-upgrade -y

Repository information is stored in:
/etc/apt/sources.list
/etc/apt/source.list.d/…

#Add apt source
sudo nano /etc/apt/sources.list
sudo apt update
 
#Add apt repository
sudo add-apt-repository ppa:user/repo-name
sudo apt update
#Remove a repository
sudo add-apt-repository —remove ppa:user/repo-name



############### INSTALL BRAVE ###############
sudo apt install curl

sudo curl -fsSLo /usr/share/keyrings/brave-browser-archive-keyring.gpg https://brave-browser-apt-release.s3.brave.com/brave-browser-archive-keyring.gpg

sudo curl -fsSLo /etc/apt/sources.list.d/brave-browser-release.sources https://brave-browser-apt-release.s3.brave.com/brave-browser.sources

sudo apt update

sudo apt install brave-browser

############### INSTALL GCC, TOOLCHAINS AND VISUAL CODE ###############
#Install GCC Toolchains
sudo apt install gcc build-essential cmake tldr automake dpkg-dev

#Install Visual Code
sudo apt-get install wget gpg
wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" |sudo tee /etc/apt/sources.list.d/vscode.list > /dev/null
rm -f packages.microsoft.gpg

sudo apt install apt-transport-https
sudo apt update
sudo apt install code # or code-insiders

############### INSTALL SSH SERVER ###############
#Install ssh server
sudo apt update
sudo apt install openssh-server
sudo systemctl enable ssh
sudo systemctl start ssh
sudo ufw allow ssh

############### INSTALL KERNEL RT ###############
apt search linux | grep rt-amd64
sudo apt install linux-image-6.1.0-37-rt-amd64 linux-headers-6.1.0-37-rt-amd64

############### COMPILE LINUXCNC FROM SOURCE ###############
https://linuxcnc.org/docs/html/code/building-linuxcnc.html

#Install GCC Toolchains
sudo apt install gcc build-essential cmake tldr automake dpkg-dev

sudo apt install python3-opengl python3-configobj mesa-utils 
sudo apt install python3-pyqt5 python3-pyqt5.qtsvg  python3-pyqt5.qsci 
sudo apt install pyqt5-dev-tools python3-numpy python3-opencv

cd ~
git clone https://github.com/LinuxCNC/linuxcnc.git linuxcnc-dev

#Get dependencies
cd linuxcnc-dev
./debian/configure
sudo apt-get build-dep .
dpkg-checkbuilddeps

#Build 
cd linuxcnc-dev/src
./autogen.sh
./configure --with-realtime=uspace
#./configure --with-realtime=uspace --prefix=/linuxcnc

make -j 2
sudo make setuid
source ../scripts/rip-environment
runtests
sudo make setuid



sudo apt build-dep . . 
#create Debian packages
dpkg-buildpackage -b -uc


sudo gedit /etc/security/limits.d/linuxcnc.conf
	* - memlock 20480

